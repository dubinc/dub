enum PartnerStatus {
  default
  verified
  featured
}

enum PartnerRole {
  owner
  member
}

model Partner {
  id                  String        @id @default(cuid())
  name                String
  email               String?        @unique
  image               String?
  bio                 String?       @db.LongText
  country             String        @default("US")
  status              PartnerStatus @default(default)
  stripeConnectId     String?       @unique
  payoutsEnabled      Boolean       @default(false)
  showOnLeaderboard   Boolean       @default(true)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt

  programs     ProgramEnrollment[]
  applications ProgramApplication[]
  users        PartnerUser[]
  invites      PartnerInvite[]
  payouts      Payout[]
  sales        Sale[]
}

model PartnerUser {
  id        String      @id @default(cuid())
  role      PartnerRole @default(member)
  userId    String
  partnerId String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([userId, partnerId])
  @@index([partnerId])
}

model PartnerInvite {
  email     String
  expires   DateTime
  partnerId String
  role      PartnerRole @default(member)
  createdAt DateTime    @default(now())

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([email, partnerId])
  @@index([partnerId])
}
