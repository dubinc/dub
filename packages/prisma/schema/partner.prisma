enum PartnerStatus {
  default
  verified
  featured
}

enum PartnerRole {
  owner
  member
}

enum PartnerProfileType {
  individual
  company
}

model Partner {
  id                String             @id @default(cuid())
  name              String
  companyName       String?
  profileType       PartnerProfileType @default(individual)
  email             String?            @unique
  image             String?
  description       String?            @db.Text
  country           String?
  status            PartnerStatus      @default(default)
  stripeConnectId   String?            @unique
  payoutsEnabledAt  DateTime?
  connectPayoutsLastRemindedAt DateTime?
  showOnLeaderboard Boolean            @default(true)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt


  programs     ProgramEnrollment[]
  users        PartnerUser[]
  invites      PartnerInvite[]
  payouts      Payout[]
  commissions  Commission[]

  website           String?
  websiteTxtRecord  String?
  websiteVerifiedAt DateTime?

  youtube           String?
  youtubeVerifiedAt DateTime?

  twitter           String?
  twitterVerifiedAt DateTime?

  linkedin           String?
  linkedinVerifiedAt DateTime?

  instagram           String?
  instagramVerifiedAt DateTime?

  tiktok           String?
  tiktokVerifiedAt DateTime?
}

model PartnerUser {
  id        String      @id @default(cuid())
  role      PartnerRole @default(member)
  userId    String
  partnerId String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([userId, partnerId])
  @@index([partnerId])
}

model PartnerInvite {
  email     String
  expires   DateTime
  partnerId String
  role      PartnerRole @default(member)
  createdAt DateTime    @default(now())

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([email, partnerId])
  @@index([partnerId])
}
