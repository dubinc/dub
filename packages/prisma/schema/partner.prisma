enum PartnerStatus {
  default
  verified
  featured
}

enum PartnerRole {
  owner
  member
}

enum PartnerProfileType {
  individual
  company
}

enum MonthlyTraffic {
  ZeroToOneThousand
  OneThousandToTenThousand
  TenThousandToFiftyThousand
  FiftyThousandToOneHundredThousand
  OneHundredThousandPlus
}

model Partner {
  id                           String             @id @default(cuid())
  name                         String
  companyName                  String?
  profileType                  PartnerProfileType @default(individual)
  email                        String?            @unique
  image                        String?
  description                  String?            @db.Text
  country                      String?
  status                       PartnerStatus      @default(default)
  paypalEmail                  String?            @unique
  stripeConnectId              String?            @unique
  payoutsEnabledAt             DateTime?
  payoutMethodHash             String?            @unique
  connectPayoutsLastRemindedAt DateTime?
  createdAt                    DateTime           @default(now())
  updatedAt                    DateTime           @updatedAt
  discoverableAt               DateTime?
  website                      String?
  websiteTxtRecord             String?
  websiteVerifiedAt            DateTime?
  youtube                      String?
  youtubeChannelId             String?
  youtubeVerifiedAt            DateTime?
  youtubeSubscriberCount       Int                @default(0)
  youtubeVideoCount            Int                @default(0)
  youtubeViewCount             Int                @default(0)
  twitter                      String?
  twitterVerifiedAt            DateTime?
  linkedin                     String?
  linkedinVerifiedAt           DateTime?
  instagram                    String?
  instagramVerifiedAt          DateTime?
  tiktok                       String?
  tiktokVerifiedAt             DateTime?
  invoiceSettings              Json?
  monthlyTraffic               MonthlyTraffic?

  programs           ProgramEnrollment[]
  users              PartnerUser[]
  invites            PartnerInvite[]
  payouts            Payout[]
  commissions        Commission[]
  bountySubmissions  BountySubmission[]
  messages           Message[]
  sentMessages       Message[]           @relation("SenderPartner")
  comments           PartnerComment[]
  discountCodes      DiscountCode[]
  notificationEmails NotificationEmail[]

  industryInterests          PartnerIndustryInterest[]
  preferredEarningStructures PartnerPreferredEarningStructure[]
  salesChannels              PartnerSalesChannel[]

  discoveredByPrograms DiscoveredPartner[]

  @@index(discoverableAt)
}

model PartnerInvite {
  email     String
  expires   DateTime
  partnerId String
  role      PartnerRole @default(member)
  createdAt DateTime    @default(now())

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([email, partnerId])
  @@index(partnerId)
}

model PartnerUser {
  id        String      @id @default(cuid())
  role      PartnerRole @default(member)
  userId    String
  partnerId String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  notificationPreferences PartnerNotificationPreferences?

  @@unique([userId, partnerId])
  @@index(partnerId)
}

model PartnerIndustryInterest {
  partnerId        String
  industryInterest IndustryInterest

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([partnerId, industryInterest])
}

enum PreferredEarningStructure {
  Revenue_Share
  Per_Lead
  Per_Sale
  Per_Click
  One_Time_Payment
}

model PartnerPreferredEarningStructure {
  partnerId                 String
  preferredEarningStructure PreferredEarningStructure

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([partnerId, preferredEarningStructure])
}

enum SalesChannel {
  Blogs
  Coupons
  Direct_Reselling
  Newsletters
  Social_Media
  Events
  Company_Referrals
}

model PartnerSalesChannel {
  partnerId    String
  salesChannel SalesChannel

  partner Partner @relation(fields: [partnerId], references: [id], onDelete: Cascade)

  @@unique([partnerId, salesChannel])
}
