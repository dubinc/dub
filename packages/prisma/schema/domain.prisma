model Domain {
  id                      String   @id @default(cuid())
  slug                    String   @unique
  verified                Boolean  @default(false)
  placeholder             String?
  expiredUrl              String?  @db.LongText // URL to redirect to for expired links
  notFoundUrl             String?  @db.LongText // URL to redirect to for links that don't exist
  primary                 Boolean  @default(false)
  archived                Boolean  @default(false)
  lastChecked             DateTime @default(now())
  logo                    String?
  appleAppSiteAssociation Json?
  assetLinks              Json?
  deepviewData            Json?    @default("{}")

  linkRetentionDays       Int? // default is null (links are retained forever)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  projectId               String?
  project          Project?          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  links            Link[]
  registeredDomain RegisteredDomain?
  programs         Program[]

  @@index(projectId)
  @@index(lastChecked(sort: Asc))
}

model RegisteredDomain {
  id                    String    @id @default(cuid())
  slug                  String
  projectId             String
  domainId              String?   @unique
  autoRenewalDisabledAt DateTime?
  renewalFee            Int       @default(1200) // $12
  expiresAt             DateTime
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  project Project @relation(fields: [projectId], references: [id])
  domain  Domain? @relation(fields: [domainId], references: [id], onDelete: SetNull)

  @@index(projectId)
  @@index(expiresAt(sort: Asc))
}

model DefaultDomains {
  id          String  @id @default(cuid())
  dublink     Boolean @default(false)
  dubsh       Boolean @default(true)
  chatgpt     Boolean @default(true)
  sptifi      Boolean @default(true)
  gitnew      Boolean @default(true)
  callink     Boolean @default(true)
  amznid      Boolean @default(true)
  ggllink     Boolean @default(true)
  figpage     Boolean @default(true)
  loooooooong Boolean @default(false)
  projectId   String  @unique
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
