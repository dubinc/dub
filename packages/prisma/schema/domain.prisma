model Domain {
  id               String            @id @default(cuid())
  slug             String            @unique
  verified         Boolean           @default(false)
  placeholder      String?
  expiredUrl       String?           @db.LongText // URL to redirect to for expired links
  notFoundUrl      String?           @db.LongText // URL to redirect to for links that don't exist
  primary          Boolean           @default(false)
  archived         Boolean           @default(false)
  lastChecked      DateTime          @default(now())
  logo             String?
  links            Link[]
  project          Project?          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId        String?
  registeredDomain RegisteredDomain?
  programs         Program[]

  // these attributes will exist on both Link and Domain models
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(projectId)
  @@index(lastChecked(sort: Asc))
}

model RegisteredDomain {
  id        String   @id @default(cuid())
  slug      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  domain    Domain? @relation(fields: [domainId], references: [id], onDelete: SetNull)
  domainId  String? @unique

  @@index(projectId)
  @@index(expiresAt(sort: Asc))
}

model DefaultDomains {
  id          String  @id @default(cuid())
  dublink     Boolean @default(false)
  dubsh       Boolean @default(true)
  chatgpt     Boolean @default(true)
  sptifi      Boolean @default(true)
  gitnew      Boolean @default(true)
  callink     Boolean @default(true)
  amznid      Boolean @default(true)
  ggllink     Boolean @default(true)
  figpage     Boolean @default(true)
  loooooooong Boolean @default(false)
  projectId   String  @unique
  project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
